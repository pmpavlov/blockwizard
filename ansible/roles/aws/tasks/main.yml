---
- name: creating the vpc
  ec2_vpc_net:
    name: "{{ app_name }}"
    cidr_block: 10.0.2.0/24
    region: "{{ region }}"
    dns_hostnames: yes
    dns_support: yes
    multi_ok: no
    tenancy: default
    tags:
      module: ec2_vpc_net
      Environment: blockwizard
      Contact: ppavlov
  register: vpc

- set_fact:
    id: "{{ vpc.vpc.id }}"

- name: creating the igw
  ec2_vpc_igw:
    vpc_id: "{{ id }}"
    state: present
    tags:
      Environment: blockwizard
      Name: "{{ app_name }}-igw"
  register: igw

- name: Create subnet for app 
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ id }}"
    az: "{{ zone[0] }}"
    cidr: 10.0.2.0/28
    resource_tags:
      Name: app subnet
      Name: "{{ app_name }}-sub-1a"
  register: "app-1a-subnet"

- name: Create subnet for app
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ id }}"
    az: "{{ zone[1] }}"
    cidr: 10.0.2.16/28
    resource_tags:
      Name: app subnet
      Name: "{{ app_name }}-sub-1b"
  register: "app-1b-subnet"

- name: create admin access security group
  ec2_group:
    name: admin_access
    description: "{{ app_name }} SSH access"
    region: "{{ region }}"
    vpc_id: "{{ id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    state: present
    tags: 
      Name: "{{ app_name }}-ssh-sg"
      Environment: blockwizard
      Contact: ppavlov
  register: admin_access_group

- name: create broker and node security group
  ec2_group:
    name: app_security
    description: "{{ app_name }}-web-access"
    region: "{{ region }}"
    vpc_id: "{{ id }}"
    rules:
      - proto: tcp
        from_port: 16000
        to_port: 16002
        cidr_ip: 0.0.0.0/0
    tags: 
      Name: "{{ app_name }}-app-sg"
      Environment: blockwizard
      Contact: ppavlov 
  register: app_security_group

