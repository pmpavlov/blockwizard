---
- name: creating the vpc
  ec2_vpc_net:
    state: present
    cidr_block: 10.0.2.0/24
    resource_tags: { "Name":" {{ app_name }}" }
    subnets: "{{ vpc_subnets }}"       
    internet_gateway: True
    route_tables: "{{ route_tables }}"
    region: "{{ region }}"
    wait: yes
  register: vpc

- name: create admin access security group
  ec2_group:
    name: admin_access
    description: SSH access
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
  tags: security_groups
  register: admin_access_group

- name: create broker and node security group
  ec2_group:
    name: "{{ app_name }}"
    description: "{{ app_name }} web access"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 16000
        to_port: 16000
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 16001
        to_port: 16001
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 16002
        to_port: 16002
        cidr_ip: 0.0.0.0/0
    vpc_id: "{{ vpc.vpc_id }}"
  tags: security_groups
  register: app_security_group

- name: launch load balancer
  ec2_elb_lb:
    name: "{{ lb_name }}"
    region: "{{ region }}"
    state: present
    subnets: "{{ asg_subnets }}"
    connection_draining_timeout: 60
    security_group_ids: "{{ app_security_group.group_id }}"
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
    health_check:
        ping_protocol: tcp
        ping_port: 16001
        ping_path: "/"
        response_timeout: 5 
        interval: 30
        unhealthy_threshold: 3
        healthy_threshold: 3
  register: load_balancer
